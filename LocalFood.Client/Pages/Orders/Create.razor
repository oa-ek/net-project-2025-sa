@page "/orders/create"
@using LocalFood.Client.Models
@using Microsoft.AspNetCore.Components.Forms
@inject HttpClient Http
@inject NavigationManager Nav

<h3>Create Order</h3>

@if (restaurants == null || statuses == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="model" OnValidSubmit="Save">
        <DataAnnotationsValidator />

        <div class="mb-3">
            <label>Customer Name</label>
            <InputText class="form-control" @bind-Value="model.CustomerName" />
        </div>

        <div class="mb-3">
            <label>Phone</label>
            <InputText class="form-control" @bind-Value="model.Phone" />
        </div>

        <div class="mb-3">
            <label>Address</label>
            <InputText class="form-control" @bind-Value="model.Address" />
        </div>

        <div class="mb-3">
            <label>Restaurant</label>
            <InputSelect class="form-control" @bind-Value="model.RestaurantId">
                <option value="0">— select —</option>
                @foreach (var r in restaurants)
                {
                    <option value="@r.RestaurantId">@r.Name</option>
                }
            </InputSelect>
        </div>

        <div class="mb-3">
            <label>Status</label>
            <InputSelect class="form-control" @bind-Value="model.StatusId">
                <option value="0">— select —</option>
                @foreach (var s in statuses)
                {
                    <option value="@s.StatusId">@s.Name</option>
                }
            </InputSelect>
        </div>

        <button class="btn btn-success">Save</button>
    </EditForm>
}

@code {
    OrderDto model = new() { OrderItems = new() };
    List<RestaurantDto>? restaurants;
    List<OrderStatusDto>? statuses;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            restaurants = await Http.GetFromJsonAsync<List<RestaurantDto>>("api/restaurants");
            statuses = await Http.GetFromJsonAsync<List<OrderStatusDto>>("api/orderstatuses");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"❌ Error loading data: {ex.Message}");
        }
    }

    async Task Save()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/orders", model);
            response.EnsureSuccessStatusCode(); // якщо помилка — зловимо
            Nav.NavigateTo("/orders");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"❌ Error creating order: {ex.Message}");
        }
    }
}
