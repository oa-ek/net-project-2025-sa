@model LocalFood.Models.Order

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Деталі замовлення";
}

<div class="container">
    <div class="row">
        <div class="col-lg-8">
            <h2 class="mb-4 fw-bold">
                <i class="fa-solid fa-clipboard-check me-2 text-primary"></i> Замовлення #@Model.OrderId
            </h2>

            <div class="card shadow-lg border-0 rounded-4 mb-4">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="fw-bold mb-0">Статус замовлення</h5>
                        <span class="badge @(Model.OrderStatus?.Name == "Доставлено" ? "bg-success" : Model.OrderStatus?.Name == "Доставляється" ? "bg-warning" : "bg-info") rounded-pill px-3 py-2 fs-6">
                            @Model.OrderStatus?.Name
                        </span>
                    </div>

                    <div class="position-relative mb-5">
                        <div class="progress" style="height: 4px;">
                            @{
                                int statusProgress = 0;
                                if (Model.OrderStatus?.Name == "В обробці") statusProgress = 25;
                                else if (Model.OrderStatus?.Name == "Готується") statusProgress = 50;
                                else if (Model.OrderStatus?.Name == "Доставляється") statusProgress = 75;
                                else if (Model.OrderStatus?.Name == "Доставлено") statusProgress = 100;
                            }
                            <div class="progress-bar bg-success" role="progressbar" style="width: @statusProgress%" aria-valuenow="@statusProgress" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                        <div class="position-absolute top-0 start-0 translate-middle" style="margin-top: 2px;">
                            <div class="rounded-circle @(statusProgress >= 25 ? "bg-success" : "bg-light") d-flex align-items-center justify-content-center" style="width: 30px; height: 30px; border: 2px solid white;">
                                <i class="fa-solid fa-check text-white" style="font-size: 12px;"></i>
                            </div>
                        </div>
                        <div class="position-absolute top-0 start-25 translate-middle" style="margin-top: 2px;">
                            <div class="rounded-circle @(statusProgress >= 50 ? "bg-success" : "bg-light") d-flex align-items-center justify-content-center" style="width: 30px; height: 30px; border: 2px solid white;">
                                <i class="fa-solid fa-utensils text-white" style="font-size: 12px;"></i>
                            </div>
                        </div>
                        <div class="position-absolute top-0 start-50 translate-middle" style="margin-top: 2px;">
                            <div class="rounded-circle @(statusProgress >= 75 ? "bg-success" : "bg-light") d-flex align-items-center justify-content-center" style="width: 30px; height: 30px; border: 2px solid white;">
                                <i class="fa-solid fa-truck-fast text-white" style="font-size: 12px;"></i>
                            </div>
                        </div>
                        <div class="position-absolute top-0 start-100 translate-middle" style="margin-top: 2px;">
                            <div class="rounded-circle @(statusProgress >= 100 ? "bg-success" : "bg-light") d-flex align-items-center justify-content-center" style="width: 30px; height: 30px; border: 2px solid white;">
                                <i class="fa-solid fa-house text-white" style="font-size: 12px;"></i>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between mt-3">
                            <div class="text-center" style="width: 25%;">
                                <small class="text-muted">Прийнято</small>
                            </div>
                            <div class="text-center" style="width: 25%;">
                                <small class="text-muted">Готується</small>
                            </div>
                            <div class="text-center" style="width: 25%;">
                                <small class="text-muted">Доставляється</small>
                            </div>
                            <div class="text-center" style="width: 25%;">
                                <small class="text-muted">Доставлено</small>
                            </div>
                        </div>
                    </div>

                    <div class="row g-4">
                        <div class="col-md-6">
                            <h6 class="fw-bold mb-3">Інформація про замовлення</h6>
                            <ul class="list-unstyled">
                                <li class="mb-2">
                                    <i class="fa-solid fa-calendar me-2 text-primary"></i>
                                    <strong>Дата:</strong> @Model.OrderDate.ToString("dd.MM.yyyy HH:mm")
                                </li>
                                <li class="mb-2">
                                    <i class="fa-solid fa-money-bill-wave me-2 text-primary"></i>
                                    <strong>Сума:</strong> @Model.TotalAmount.ToString("0.00") грн
                                </li>
                                <li>
                                    <i class="fa-solid fa-utensils me-2 text-primary"></i>
                                    <strong>Ресторан:</strong> @Model.Restaurant?.Name
                                </li>
                            </ul>
                        </div>
                        <div class="col-md-6">
                            <h6 class="fw-bold mb-3">Інформація про доставку</h6>
                            <ul class="list-unstyled">
                                <li class="mb-2">
                                    <i class="fa-solid fa-user me-2 text-primary"></i>
                                    <strong>Ім'я:</strong> @Model.CustomerName
                                </li>
                                <li class="mb-2">
                                    <i class="fa-solid fa-phone me-2 text-primary"></i>
                                    <strong>Телефон:</strong> @Model.Phone
                                </li>
                                <li>
                                    <i class="fa-solid fa-location-dot me-2 text-primary"></i>
                                    <strong>Адреса:</strong> @Model.Address
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <h4 class="mb-3 fw-bold">
                <i class="fa-solid fa-utensils me-2 text-primary"></i> Страви
            </h4>

            <div class="card shadow-lg border-0 rounded-4 mb-4">
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0">
                            <thead class="bg-light">
                                <tr>
                                    <th class="py-3 ps-4">Назва</th>
                                    <th class="py-3 text-center">Кількість</th>
                                    <th class="py-3 text-end">Ціна</th>
                                    <th class="py-3 text-end pe-4">Разом</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderItems)
                                {
                                    <tr>
                                        <td class="py-3 ps-4">
                                            <div class="d-flex align-items-center">
                                                @if (item.Dish != null && !string.IsNullOrEmpty(item.Dish.ImageUrl))
                                                {
                                                    <img src="@item.Dish.ImageUrl" alt="@item.Dish?.Name" class="me-3 rounded" style="width: 50px; height: 50px; object-fit: cover;" />
                                                }
                                                else
                                                {
                                                    <div class="me-3 rounded bg-light d-flex align-items-center justify-content-center" style="width: 50px; height: 50px;">
                                                        <i class="fa-solid fa-utensils text-muted"></i>
                                                    </div>
                                                }
                                                <span class="fw-bold">@item.Dish?.Name</span>
                                            </div>
                                        </td>
                                        <td class="py-3 text-center">
                                            <span class="badge bg-primary rounded-pill px-3 py-2">@item.Quantity</span>
                                        </td>
                                        <td class="py-3 text-end">@item.Price.ToString("0.00") грн</td>
                                        <td class="py-3 text-end pe-4 fw-bold">@((item.Price * item.Quantity).ToString("0.00")) грн</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot class="bg-light">
                                <tr>
                                    <td colspan="3" class="text-end fw-bold py-3">Загальна сума:</td>
                                    <td class="text-end fw-bold text-primary py-3 pe-4">@Model.TotalAmount.ToString("0.00") грн</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card shadow-lg border-0 rounded-4 mb-4 sticky-top" style="top: 20px;">
                <div class="card-body p-0">
                    <div id="map" class="rounded-top-4" style="height: 300px;"></div>
                    <div class="p-4">
                        <h5 class="fw-bold mb-3">Адреса доставки</h5>
                        <p class="mb-4">
                            <i class="fa-solid fa-location-dot me-2 text-danger"></i>
                            @Model.Address
                        </p>

                        @if (User.IsInRole("Menager") || User.IsInRole("Courier"))
                        {
                            <form asp-action="UpdateStatus" method="post">
                                <input type="hidden" name="orderId" value="@Model.OrderId" />
                                <div class="mb-3">
                                    <label class="form-label fw-bold">
                                        <i class="fa-solid fa-sync-alt me-1"></i> Оновити статус
                                    </label>
                                    <select name="statusId" class="form-select form-select-lg">
                                        @foreach (var status in ViewBag.StatusList as List<SelectListItem>)
                                        {
                                            <option value="@status.Value" selected="@(Model.StatusId.ToString() == status.Value)">
                                                @status.Text
                                            </option>
                                        }
                                    </select>
                                </div>
                                <button type="submit" class="btn btn-primary w-100">
                                    <i class="fa-solid fa-check me-1"></i> Оновити статус
                                </button>
                            </form>
                        }
                        else if (User.IsInRole("User"))
                        {
                            <a href="tel:@Model.Phone" class="btn btn-outline-primary w-100 mb-2">
                                <i class="fa-solid fa-phone me-1"></i> Зателефонувати
                            </a>
                            <a asp-controller="Orders" asp-action="MyOrders" class="btn btn-secondary w-100">
                                <i class="fa-solid fa-arrow-left me-1"></i> До моїх замовлень
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link href="https://unpkg.com/maplibre-gl@2.4.0/dist/maplibre-gl.css" rel="stylesheet" />
    <script src="https://unpkg.com/maplibre-gl@2.4.0/dist/maplibre-gl.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const map = new maplibregl.Map({
                container: 'map',
                style: 'https://api.maptiler.com/maps/streets/style.json?key=v8pi6Yceq2CQ8UEckbB7',
                center: [31.1656, 48.3794],
                zoom: 13
            });

            // Додаємо елементи керування
            map.addControl(new maplibregl.NavigationControl(), 'top-right');

            async function showDeliveryLocation() {
                const address = "@Model.Address";
                const restaurantAddress = "@Model.Restaurant?.Address";

                // Отримуємо координати адреси доставки
                const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`);
                const data = await response.json();

                if (data && data.length > 0) {
                    const lat = parseFloat(data[0].lat);
                    const lng = parseFloat(data[0].lon);

                    map.flyTo({
                        center: [lng, lat],
                        zoom: 15,
                        essential: true
                    });

                    // Додаємо маркер для адреси доставки
                    new maplibregl.Marker({ color: '#ef476f' })
                        .setLngLat([lng, lat])
                        .setPopup(new maplibregl.Popup({ offset: 25 })
                            .setHTML(`<h5>Адреса доставки</h5><p>${address}</p>`))
                        .addTo(map)
                        .togglePopup();

                    // Якщо є адреса ресторану, додаємо маркер для ресторану і будуємо маршрут
                    if (restaurantAddress) {
                        const restaurantResponse = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(restaurantAddress)}`);
                        const restaurantData = await restaurantResponse.json();

                        if (restaurantData && restaurantData.length > 0) {
                            const restaurantLat = parseFloat(restaurantData[0].lat);
                            const restaurantLng = parseFloat(restaurantData[0].lon);

                            // Додаємо маркер для ресторану
                            new maplibregl.Marker({ color: '#06d6a0' })
                                .setLngLat([restaurantLng, restaurantLat])
                                .setPopup(new maplibregl.Popup({ offset: 25 })
                                    .setHTML(`<h5>Ресторан</h5><p>${restaurantAddress}</p>`))
                                .addTo(map);

                            // Будуємо маршрут між рестораном і адресою доставки
                            const directionsUrl = `https://router.project-osrm.org/route/v1/driving/${restaurantLng},${restaurantLat};${lng},${lat}?overview=full&geometries=geojson`;

                            try {
                                const routeRes = await fetch(directionsUrl);
                                const routeData = await routeRes.json();

                                if (routeData.routes && routeData.routes.length > 0) {
                                    const routeGeo = {
                                        type: "Feature",
                                        geometry: routeData.routes[0].geometry
                                    };

                                    map.addSource('route', {
                                        type: 'geojson',
                                        data: routeGeo
                                    });

                                    map.addLayer({
                                        id: 'route',
                                        type: 'line',
                                        source: 'route',
                                        paint: {
                                            'line-color': '#ff6b6b',
                                            'line-width': 6,
                                            'line-opacity': 0.8
                                        }
                                    });

                                    // Підлаштовуємо карту під маршрут
                                    const bounds = new maplibregl.LngLatBounds([restaurantLng, restaurantLat], [lng, lat]);
                                    map.fitBounds(bounds, { padding: 100 });
                                }
                            } catch (error) {
                                console.error("Помилка при отриманні маршруту:", error);
                            }
                        }
                    }
                }
            }

            map.on('load', showDeliveryLocation);
        });
    </script>
}